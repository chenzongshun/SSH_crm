<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
	"http://struts.apache.org/dtds/struts-2.5.dtd">
<struts>

<!-- lib/struts2-core-2.5.14.1.jar/org/apache/struts2/default.properties里找 -->
<!-- struts.objectFactory = spring   		将action的创建交给spring容器
		 struts.objectFactory.spring.autoWire = name（默认打开，不用配置）  spring负责装配action依属性赖 -->

<!-- 将action的创建交给spring容器 -->
<constant name="struts.objectFactory" value="spring"></constant>

	<package name="crm" namespace="/" extends="struts-default" strict-method-invocation="false">
		<!-- 异常处理配置 -->
		<global-exception-mappings>
			<exception-mapping result="error" exception="java.lang.RuntimeException"></exception-mapping>
		</global-exception-mappings>
	
	
		<!-- 整合struts2与spring两种方案 -->
		<!-- 整合方案一： 在class属性上仍然配置action的完整类名
												struts2仍然创建action，但是由spring负责组装action中的依赖属性 -->
		
		<!-- <action name="UserAction_*" class="shun.action.UserAction" method="{1}">
			<result name = "success">/success.jsp</result>
		</action> -->
		<!-- 整合方案二：class属性填写上spring中的action对象的BeanName
										完全由spring管理action的生命周期，包括action的创建
										注意：需要手动组装依赖属性  -->
		<action name="UserAction_*" class="userAction" method="{1}">
			<result name="toHome" type="redirect">index.htm</result>
			<result name="error">login.jsp</result>
		</action>
	
		<action name="CustomerAction_*" class="customerAction" method="{1}">
			<result name="list" >jsp/customer/list.jsp</result>
		</action> 
	</package>
</struts>

